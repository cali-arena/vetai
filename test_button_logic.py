#!/usr/bin/env python3
"""
Teste simples para verificar se os bot√µes est√£o funcionando
"""

import streamlit as st
from vetlib.simple_diagnosis import gerar_hipoteses_simples

st.set_page_config(page_title="Teste Bot√µes", page_icon="üß™")

st.title("üß™ Teste de L√≥gica de Bot√µes")

# Teste 1: Bot√£o simples
st.markdown("### Teste 1: Bot√£o Simples")
if st.button("‚úÖ Teste Simples"):
    st.success("Bot√£o simples funcionando!")
    
    # Teste do sistema
    sintomas = {'poliuria': 1, 'polidipsia': 1}
    exames = {'creatinina': 3.0, 'glicose': 20}
    especie = 'Canina'
    
    resultados = gerar_hipoteses_simples(sintomas, exames, especie)
    st.write(f"Sistema funcionando: {len(resultados)} resultados")
    
    for i, res in enumerate(resultados[:2], 1):
        st.write(f"{i}. {res['diagnostico']} - Score: {res['score']:.2f}")

# Teste 2: M√∫ltiplos bot√µes
st.markdown("### Teste 2: M√∫ltiplos Bot√µes")
col1, col2, col3 = st.columns(3)

with col1:
    btn1 = st.button("Bot√£o 1", key="btn1")

with col2:
    btn2 = st.button("Bot√£o 2", key="btn2")

with col3:
    btn3 = st.button("Bot√£o 3", key="btn3")

if btn1:
    st.info("Bot√£o 1 clicado!")
    sintomas = {'poliuria': 1, 'polidipsia': 1}
    exames = {'creatinina': 3.0, 'glicose': 20}
    especie = 'Canina'
    resultados = gerar_hipoteses_simples(sintomas, exames, especie)
    st.write(f"Resultados: {len(resultados)}")

if btn2:
    st.warning("Bot√£o 2 clicado!")

if btn3:
    st.error("Bot√£o 3 clicado!")

st.markdown("### Resultado:")
st.info("Se os bot√µes funcionarem aqui, o problema n√£o est√° na l√≥gica b√°sica do Streamlit.")


